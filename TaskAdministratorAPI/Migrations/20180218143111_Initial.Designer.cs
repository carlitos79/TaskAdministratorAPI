// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using TaskAdministratorAPI.Models;

namespace TaskAdministratorAPI.Migrations
{
    [DbContext(typeof(TaskAdministratorAPIContext))]
    [Migration("20180218143111_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TaskAdministratorAPI.Models.Assignments", b =>
                {
                    b.Property<int>("TaskID");

                    b.Property<int>("UserID");

                    b.HasKey("TaskID", "UserID");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("TaskAdministratorAPI.Models.Tasks", b =>
                {
                    b.Property<int>("TaskID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BeginDateTime");

                    b.Property<DateTime>("DeadlineDateTime");

                    b.Property<string>("Requirements")
                        .IsRequired();

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("TaskID");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TaskAdministratorAPI.Models.Users", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<int?>("TasksTaskID");

                    b.HasKey("UserID");

                    b.HasIndex("TasksTaskID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TaskAdministratorAPI.Models.Users", b =>
                {
                    b.HasOne("TaskAdministratorAPI.Models.Tasks")
                        .WithMany("Responsables")
                        .HasForeignKey("TasksTaskID");
                });
#pragma warning restore 612, 618
        }
    }
}
